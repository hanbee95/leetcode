class Solution:
    def averageOfLevels(self, root: Optional[TreeNode]) -> List[float]:
        level = 0
        output = {}
        def dfs(root,level,output):
            if root is None:
                return
            if level not in output.keys():
                output[level] = []
                output[level].append([root.val,1])
            else:
                output[level]=[[output[level][0][0] + root.val, output[level][0][1] + 1]]
            dfs(root.right,level+1,output)
            dfs(root.left,level+1,output)
            return
        dfs(root,level,output)
        lst = []
        for elem in output.values():
            lst.append(float(elem[0][0]/elem[0][1]))
        return lst